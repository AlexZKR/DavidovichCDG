@model ProductsPageViewModel

@{
  ViewData["Title"] = "Менеджер каталога";
}

@if(Model.IsSuccess == false)
{
  <h1 class="text-danger text-center mt-5">
    @Model.StatusMessage
  </h1>
}
else
{
<div class="container-1 py-5 mx-5">
  <div class="row">
    <div class="col-lg-3">
      <h1>Управление каталогом</h1>
    </div>
    <div class="col-lg-4 mt-2">
      <a asp-controller="Products" asp-action="Create" class="btn btn-primary mx-4 h3">
        Создать <i class="fa-solid fa-plus"></i>
      </a>
    </div>
  </div>

    <div id="catalogView" class="mb-3">
        <partial name="_ProductListPartial" model="@Model.Products"/>
    </div>
    <partial name="_ProdPaginationPartial" model="@Model.Pagination"/>
  </div>
}

@section Scripts
{
  <script>

    window.onload = onPageLoad();

    function onPageLoad()
    {
      loadPaginationData();
      updateButtons();
    }

    function deleteItem(itemId)
    {

      let confirmDelete = confirm("Вы уверены, что хотите удалить книгу № " + itemId + "?");
      if (confirmDelete == true)
      {
        $.ajax(
        {
          url: "Products/BookDelete?itemId="+itemId,
          type: "delete",
          data:
          {
            itemId: itemId,
          },
          success: function (data, textStatus, jqXHR)
          {
            console.log(textStatus + ": " + jqXHR.status);
            alert("Книга № " + itemId + " удалена.")
            $("#item-"+itemId).empty();
          }
        });
      }
    }

    function prevPage(page)
    {
      console.log("Sys page: " + page);
      let pageNum = parseInt(page);
      pageNum -= 1;

      if(page == 0)
      {
        console.log("Page is 0, stop # " + pageNum);
      }
      else
      {
        console.log("Switching to prev page # " + pageNum);
        $("#actualPage").html(pageNum);
        loadPage(pageNum);
      }
      updateButtons();
    }

    function nextPage(page)
    {
      console.log("Sys page: " + page);
      let pageNum = parseInt(page);
      pageNum++;
      var maxPage = $('#totalPages').text();
      if(page == maxPage)
      {
        console.log("Page is at max, stop # " + pageNum);
      }
      else
      {
        console.log("Switching to next page # " + pageNum);
        $("#actualPage").html(pageNum);
        loadPage(pageNum);
      }
      updateButtons();
    }

    function updateButtons()
    {
      var page = $('#actualPage').text();
      var totalPages = $('#totalPages').text();
      if(page == 0)
      {
        $("#prevPage").prop("disabled",true);
      }
      else
      {
        $("#prevPage").prop("disabled",false);
      }

      if(page == totalPages)
      {
        $("#nextPage").prop("disabled",true);
      }
      else
      {
        $("#nextPage").prop("disabled",false);
      }
    }

    function loadPage(page)
    {
      var pageS = `${page}`;
      console.log("loading page "+page);

      $.ajax(
        {
          url:"@Url.Action("GetProductsPage","Products")",
          data:
          {
            page:page,
          },
          type: "get",
          success: function (data, textStatus, jqXHR)
          {
            console.log(textStatus + ": " + jqXHR.status);
            console.log("Switching to page "+pageS);
            loadPaginationData();
            $("#catalogView").html(data);
          }
        });
    }

    function loadPaginationData()
    {
      $.ajax(
        {
          url: "Products/PaginationInfo",
          type: "get",
          data:{},
          success: function (data, textStatus, jqXHR)
          {
            console.log(textStatus + ": " + jqXHR.status);
            console.log("Total books: "+ data.count);
            console.log("Page size: "+ data.pageSize);
            var totalPages = Math.ceil(data.count/data.pageSize -1);
            console.log("Total pages: "+ totalPages);

            $('#totalPages').text(totalPages);
            $('#totalItems').text(data.count);
          },
          error: function (data, textStatus, jqXHR)
          {
            console.log(data);
          }
        });
    }
  </script>
}